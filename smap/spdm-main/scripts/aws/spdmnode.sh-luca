#!/bin/sh
#
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -r ${SCRIPT_DIR}/env.sh ] ; then
   . ${SCRIPT_DIR}/env.sh
fi
#
# Instantiates services on the swarm.
# Note that each service mounts a shared local directory.
docker node update --label-add acce_type=spdm-services ${MANAGER}
#
# ---> add a line for each node
# ---> set acce_stub to true or false to include a node
#
docker service create --replicas 2 --name spdmnode \
                --mount type=bind,src=${SHARED_DIR},dst=/project/spdm \
                --mount type=bind,src=/shared-smap-data/spdm/spdmops/cas-pge-0.3.jar,dst=/usr/local/spdm/deploy/spdm-1.4.2/spdm-workflow-1.4.2/lib/cas-pge-0.3.jar \
                --network ${SWARM_NETWORK}  --constraint 'node.labels.acce_stub==true' \
                --env DB_HOST=${DB_HOST} --env DB_PORT=${DB_PORT} \
                --env DB_INSTANT=${DB_INSTANT} --env DB_DOMAIN=${DB_DOMAIN} \
                --env DB_USER=${DB_USER} --env DB_PASS=${DB_PASS} \
                --env SPDM_FILEMGR_URL=http://${SPDM_HOST}:9000 \
                --env SPDM_WORKFLOWMGR_URL=http://spdmnode:9001 \
                --env PGE_WORKFLOWMGR_URL=http://localhost:9001 \
                --env SPDM_RESOURCEMGR_URL= \
                --env FILEMGR_URL=http://${SPDM_HOST}:9000 \
                --env WORKFLOWMGR_URL=http://spdmnode:9001 \
                --env RESOURCEMGR_URL= \
                --env SPDM_COMPONENTS="workflow" \
                oodthub/spdm-services:0.3
